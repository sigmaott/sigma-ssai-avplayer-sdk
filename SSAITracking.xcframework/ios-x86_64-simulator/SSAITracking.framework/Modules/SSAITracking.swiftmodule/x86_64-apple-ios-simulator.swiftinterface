// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
// swift-module-flags: -target x86_64-apple-ios12.4-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name SSAITracking
import AVFoundation
import AVKit
import Foundation
import Swift
import UIKit
import _Concurrency
@objc public class SigmaSSAI : ObjectiveC.NSObject, AVFoundation.AVAssetResourceLoaderDelegate {
  public init(source initSource: Swift.String, _ trackingUrl: Swift.String, _ callback: SSAITracking.SigmaSSAIInterface, _ intervalTime: Swift.Double)
  public func getDataUrl() -> Swift.Dictionary<Swift.String, Swift.String>
  public func updatePlaybackTime(playbackTime time: Swift.Double)
  public func setPlayer(_ avPlayer: AVFoundation.AVPlayer)
  public func playerError(playerError error: Any)
  public func destroy()
  public func clear()
  public func setSSAILink(SSAILink link: Swift.String)
  public func onStartPlay()
  @objc override dynamic public func observeValue(forKeyPath keyPath: Swift.String?, of object: Any?, change: [Foundation.NSKeyValueChangeKey : Any]?, context: Swift.UnsafeMutableRawPointer?)
  @objc deinit
}
public protocol SigmaSSAIInterface {
  func onSessionFail()
  func onSessionInitSuccess(_ videoUrl: Swift.String)
  func onSessionUpdate(_ videoUrl: Swift.String)
  func onTracking(_ message: Swift.String)
}
